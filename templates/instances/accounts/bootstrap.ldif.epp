<%- |
  String[2]  $base_dn,
  String[2]  $root_dn,
  String[2]  $bind_dn,
  String[2]  $bind_pw,
  Integer[0] $users_group_id,
  Integer[0] $administrators_group_id
| -%>
dn: <%= $base_dn %>
dc: <%= split(split($base_dn, ',')[0], /(?i:dc=)/)[-1] %>
objectClass: top
objectClass: domain
aci: (targetattr = "aci")(version 3.0;acl "Admins can manage ACIs"; allow (write) groupdn="ldap:///cn=Directory Administrators,ou=Groups,<%= $base_dn %>";)
aci: (target=ldap:///<%= $base_dn %>)(targetattr=*)(version 3.0; acl "Directory Administrators"; allow(write) groupdn = "ldap:///cn=Directory Administrators,ou=Groups,<%= $base_dn %>";)

dn: cn=Directory Administrators,<%= $base_dn %>
cn: Directory Administrators
objectClass: top
objectClass: groupOfUniqueNames
uniqueMember: <%= $root_dn %>

dn: ou=Hosts,<%= $base_dn %>
ou: Hosts
objectClass: top
objectClass: organizationalUnit

# Custom Host-Account Password Policy Container
dn: cn=nsPwPolicyContainer,ou=Hosts,<%= $base_dn %>
cn: nsPwPolicyContainer
objectClass: top
objectClass: nsContainer

# Custom password policies for automated accounts
dn: cn="cn=noExpire_noLockout,ou=Hosts,<%= $base_dn %>",cn=nsPwPolicyContainer,ou=Hosts,<%= $base_dn %>
objectClass: top
objectClass: extensibleObject
objectClass: ldapSubentry
objectClass: passwordPolicy
passwordChange: off
passwordMustChange: off
passwordHistory: off
passwordLockout: off
passwordCheckSyntax: off

dn: cn="cn=nsPwTemplateEntry,ou=Hosts,<%= $base_dn %>",cn=nsPwPolicyContainer,ou=Hosts,<%= $base_dn %>
objectClass: top
objectClass: extensibleObject
objectClass: cosTemplate
objectClass: ldapSubentry
cosPriority: 1
pwdPolicySubentry: cn="cn=noExpire_noLockout,ou=Hosts,<%= $base_dn %>",cn=nsPwPolicyContainer,ou=Hosts,<%= $base_dn %>

dn: cn=noExpire_noLockout_cos,ou=Hosts,<%= $base_dn %>
objectClass: top
objectClass: LDAPsubentry
objectClass: cosSuperDefinition
objectClass: cosPointerDefinition
cosTemplateDn: cn="cn=nsPwTemplateEntry,ou=Hosts,<%= $base_dn %>",cn=nsPwPolicyContainer,ou=Hosts,<%= $base_dn %>
cosAttribute: pwdPolicySubentry default operational

dn: <%= $bind_dn %>
cn: <%= split(split($bind_dn, ',')[0], '=')[-1] %>
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: inetOrgPerson
objectClass: inetUser
sn: Internal
userPassword: <%= $bind_pw %>

dn: cn=localhost.localdomain,ou=Hosts,<%= $base_dn %>
objectClass: top
objectClass: ipHost
ipHostNumber: 127.0.0.1
cn: localhost.localdomain
cn: localhost

dn: ou=Groups,<%= $base_dn %>
ou: Groups
objectClass: top
objectClass: organizationalUnit
aci: (targetattr!="userpassword || aci")(version 3.0; acl "Enable Authenticated Group Read Access"; allow (read, search, compare) userdn="ldap:///all";)

dn: ou=People,<%= $base_dn %>
ou: People
objectClass: top
objectClass: organizationalUnit
aci: (targetattr!="userpassword || aci")(version 3.0; acl "Enable Authenticated People Read Access"; allow (read, search, compare) userdn="ldap:///all";)
aci: (targetattr = "givenname || sn || cn || displayname || title || initials || loginshell || gecos || homephone || mobile || pager || facsimiletelephonenumber || telephonenumber || street || roomnumber || l || st || postalcode || manager || secretary || description || carlicense || labeleduri || inetuserhttpurl || seealso || employeetype  || businesscategory || ou")(version 3.0;acl "selfservice:User Self service";allow (write) userdn = "ldap:///self";)
aci: (targetattr = "userpassword")(version 3.0; acl "selfservice:Self can write own password"; allow (write) userdn="ldap:///self";)
aci: (targetattr = "usercertificate")(version 3.0;acl "selfservice:Users can manage their own X.509 certificates";allow (write) userdn = "ldap:///self";)

dn: cn=users,ou=Groups,<%= $base_dn %>
objectClass: groupOfUniqueNames
objectClass: groupOfNames
objectClass: posixGroup
objectClass: top
cn: users
gidNumber: <%= $users_group_id %>

dn: cn=administrators,ou=Groups,<%= $base_dn %>
objectClass: groupOfUniqueNames
objectClass: groupOfNames
objectClass: posixGroup
objectClass: top
cn: administrators
gidNumber: <%= $administrators_group_id %>

dn: ou=SUDOers,<%= $base_dn %>
ou: SUDOers
objectClass: top
objectClass: organizationalUnit
aci: (targetattr!="userpassword || aci")(version 3.0; acl "Enable Host Bind User Read Access"; allow (read, search, compare) userdn="ldap:///<%= $bind_dn %>";)

dn: cn=defaults,ou=SUDOers,<%= $base_dn %>
cn: defaults
objectClass: top
objectClass: sudoRole
description: Default sudo options
sudoOrder: 1
sudoOption: ignore_unknown_defaults
sudoOption: !visiblepw
sudoOption: always_set_home
sudoOption: match_group_by_gid
sudoOption: always_query_group_plugin
sudoOption: listpw=all
sudoOption: requiretty
sudoOption: syslog=authpriv
sudoOption: !root_sudo
sudoOption: !umask
sudoOption: secure_path = /usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
sudoOption: env_reset
sudoOption: env_keep = "COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR"
sudoOption: env_keep += "LS_COLORS MAIL PS1 PS2 QTDIR USERNAME"
sudoOption: env_keep += "LANG LC_ADDRESS LC_CTYPE LC_COLLATE LC_IDENTIFICATION"
sudoOption: env_keep += "LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC"
sudoOption: env_keep += "LC_PAPER LC_TELEPHONE LC_TIME LC_ALL LANGUAGE LINGUAS"
sudoOption: env_keep += "XKB_CHARSET XAUTHORITY"
